/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package com.ehealth.forms;

import com.ehealth.dao.Impl.PermissionDAOImpl;
import com.ehealth.dao.Impl.UserPermissionDAOImpl;
import com.ehealth.dao.Impl.UserTypeDAOImpl;
import com.ehealth.dao.PermissionDAO;
import com.ehealth.dao.UserPermissionDAO;
import com.ehealth.dao.UserTypeDAO;
import com.ehealth.models.PermissionModel;
import com.ehealth.models.UserPermissionModel;
import com.ehealth.models.UserTypeModel;
import java.awt.Dimension;
import java.awt.Toolkit;
import java.util.List;
import javax.swing.DefaultListModel;

/**
 *
 * @author Akash
 */
public class UserPermissionFrame extends javax.swing.JFrame {
    
    DefaultListModel unassignedPermissions;
    DefaultListModel assignedPermissions;
    String userType;
    /**
     * Creates new form UserPermissionFrame
     */
    public UserPermissionFrame() {
        initComponents();
        setIcon();
        Dimension screenSize = Toolkit.getDefaultToolkit().getScreenSize();
        int width = (int)screenSize.getWidth();
        int height = (int)screenSize.getHeight();
        setSize(width, height);
        setIcon();
        setTitle("User Permission Window");
        unassignedPermissions = new DefaultListModel();
        assignedPermissions = new DefaultListModel();
        populateUserTypeCombo();
        btnAssignAllPermissions.setVisible(false);
        btnAssignParmission.setVisible(false);
        btnUnassignAllPermissions.setVisible(false);
        btnUnassignPermission.setVisible(false);
        checkPermissions();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        backgroundPanel = new javax.swing.JPanel();
        lbPatient = new javax.swing.JLabel();
        userTypeCombo = new javax.swing.JComboBox<>();
        jScrollPane1 = new javax.swing.JScrollPane();
        listOfAssignedPermissions = new javax.swing.JList<>();
        jScrollPane2 = new javax.swing.JScrollPane();
        listOfUnassignedPermissions = new javax.swing.JList<>();
        btnAssignParmission = new javax.swing.JButton();
        btnUnassignPermission = new javax.swing.JButton();
        btnAssignAllPermissions = new javax.swing.JButton();
        btnUnassignAllPermissions = new javax.swing.JButton();
        lbPatient1 = new javax.swing.JLabel();
        lbPatient2 = new javax.swing.JLabel();
        lbBack = new javax.swing.JLabel();
        jLabel8 = new javax.swing.JLabel();
        lbLogout = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setTitle("User Permissions");

        backgroundPanel.setBackground(new java.awt.Color(29, 29, 29));
        backgroundPanel.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        lbPatient.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        lbPatient.setForeground(new java.awt.Color(255, 255, 255));
        lbPatient.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        lbPatient.setText("Assigned Permissions");
        backgroundPanel.add(lbPatient, new org.netbeans.lib.awtextra.AbsoluteConstraints(980, 130, 150, 30));

        userTypeCombo.setBackground(backgroundPanel.getBackground());
        userTypeCombo.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        userTypeCombo.setForeground(new java.awt.Color(255, 255, 255));
        userTypeCombo.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "----Select----" }));
        userTypeCombo.setOpaque(false);
        userTypeCombo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                userTypeComboActionPerformed(evt);
            }
        });
        backgroundPanel.add(userTypeCombo, new org.netbeans.lib.awtextra.AbsoluteConstraints(620, 120, 210, 40));

        listOfAssignedPermissions.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jScrollPane1.setViewportView(listOfAssignedPermissions);

        backgroundPanel.add(jScrollPane1, new org.netbeans.lib.awtextra.AbsoluteConstraints(890, 170, 320, 450));

        listOfUnassignedPermissions.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jScrollPane2.setViewportView(listOfUnassignedPermissions);

        backgroundPanel.add(jScrollPane2, new org.netbeans.lib.awtextra.AbsoluteConstraints(140, 170, 310, 460));

        btnAssignParmission.setBackground(new java.awt.Color(255, 255, 255));
        btnAssignParmission.setFont(new java.awt.Font("Tahoma", 1, 24)); // NOI18N
        btnAssignParmission.setIcon(new javax.swing.ImageIcon(getClass().getResource("/com/ehealth/images/icons8_Forward_24px_1.png"))); // NOI18N
        btnAssignParmission.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnAssignParmissionActionPerformed(evt);
            }
        });
        backgroundPanel.add(btnAssignParmission, new org.netbeans.lib.awtextra.AbsoluteConstraints(600, 250, 150, 70));

        btnUnassignPermission.setBackground(new java.awt.Color(255, 255, 255));
        btnUnassignPermission.setFont(new java.awt.Font("Tahoma", 1, 24)); // NOI18N
        btnUnassignPermission.setIcon(new javax.swing.ImageIcon(getClass().getResource("/com/ehealth/images/icons8_Back_24px_1.png"))); // NOI18N
        btnUnassignPermission.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnUnassignPermissionActionPerformed(evt);
            }
        });
        backgroundPanel.add(btnUnassignPermission, new org.netbeans.lib.awtextra.AbsoluteConstraints(600, 330, 150, 70));

        btnAssignAllPermissions.setBackground(new java.awt.Color(255, 255, 255));
        btnAssignAllPermissions.setFont(new java.awt.Font("Tahoma", 1, 24)); // NOI18N
        btnAssignAllPermissions.setIcon(new javax.swing.ImageIcon(getClass().getResource("/com/ehealth/images/icons8_Double_Right_24px_1.png"))); // NOI18N
        btnAssignAllPermissions.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnAssignAllPermissionsActionPerformed(evt);
            }
        });
        backgroundPanel.add(btnAssignAllPermissions, new org.netbeans.lib.awtextra.AbsoluteConstraints(600, 410, 150, 70));

        btnUnassignAllPermissions.setBackground(new java.awt.Color(255, 255, 255));
        btnUnassignAllPermissions.setFont(new java.awt.Font("Tahoma", 1, 24)); // NOI18N
        btnUnassignAllPermissions.setIcon(new javax.swing.ImageIcon(getClass().getResource("/com/ehealth/images/icons8_Double_Left_24px_1.png"))); // NOI18N
        btnUnassignAllPermissions.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnUnassignAllPermissionsActionPerformed(evt);
            }
        });
        backgroundPanel.add(btnUnassignAllPermissions, new org.netbeans.lib.awtextra.AbsoluteConstraints(600, 490, 150, 70));

        lbPatient1.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        lbPatient1.setForeground(new java.awt.Color(255, 255, 255));
        lbPatient1.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        lbPatient1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/com/ehealth/images/icons8_Worker_32px.png"))); // NOI18N
        lbPatient1.setText("User Type");
        backgroundPanel.add(lbPatient1, new org.netbeans.lib.awtextra.AbsoluteConstraints(490, 120, 110, 40));

        lbPatient2.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        lbPatient2.setForeground(new java.awt.Color(255, 255, 255));
        lbPatient2.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        lbPatient2.setText("Unassigned Permissions");
        backgroundPanel.add(lbPatient2, new org.netbeans.lib.awtextra.AbsoluteConstraints(200, 130, 170, 30));

        lbBack.setFont(new java.awt.Font("Tahoma", 1, 24)); // NOI18N
        lbBack.setForeground(new java.awt.Color(255, 255, 255));
        lbBack.setIcon(new javax.swing.ImageIcon(getClass().getResource("/com/ehealth/images/icons8_Back_48px.png"))); // NOI18N
        lbBack.setText("   Back");
        lbBack.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                lbBackMouseClicked(evt);
            }
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                lbBackMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                lbBackMouseExited(evt);
            }
        });
        backgroundPanel.add(lbBack, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 20, 140, 60));

        jLabel8.setFont(new java.awt.Font("Tahoma", 1, 36)); // NOI18N
        jLabel8.setForeground(new java.awt.Color(255, 255, 255));
        jLabel8.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel8.setIcon(new javax.swing.ImageIcon(getClass().getResource("/com/ehealth/images/icons8_Login_As_User_48px.png"))); // NOI18N
        jLabel8.setText(" User Permissions");
        backgroundPanel.add(jLabel8, new org.netbeans.lib.awtextra.AbsoluteConstraints(500, 20, 400, 50));

        lbLogout.setFont(new java.awt.Font("Tahoma", 1, 24)); // NOI18N
        lbLogout.setForeground(new java.awt.Color(255, 255, 255));
        lbLogout.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        lbLogout.setIcon(new javax.swing.ImageIcon(getClass().getResource("/com/ehealth/images/icons8_Export_48px_4.png"))); // NOI18N
        lbLogout.setText("Logout");
        lbLogout.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        lbLogout.setHorizontalTextPosition(javax.swing.SwingConstants.LEFT);
        lbLogout.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                lbLogoutMouseClicked(evt);
            }
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                lbLogoutMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                lbLogoutMouseExited(evt);
            }
        });
        backgroundPanel.add(lbLogout, new org.netbeans.lib.awtextra.AbsoluteConstraints(1200, 20, 140, 60));

        jLabel3.setForeground(new java.awt.Color(255, 255, 255));
        jLabel3.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel3.setText("Copyright © 2018 Geeks. All rights reserved");
        backgroundPanel.add(jLabel3, new org.netbeans.lib.awtextra.AbsoluteConstraints(560, 670, 240, 30));

        getContentPane().add(backgroundPanel, java.awt.BorderLayout.CENTER);

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btnAssignParmissionActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnAssignParmissionActionPerformed
        if(listOfUnassignedPermissions.getSelectedValue()!=null) {
            Object[] permissonType = listOfUnassignedPermissions.getSelectedValues();    
            PermissionDAO permissionDAO = new PermissionDAOImpl();
            UserTypeDAO userTypeDAO = new UserTypeDAOImpl();
            UserPermissionDAO userPermissionDAO = new UserPermissionDAOImpl();
            UserPermissionModel userPermissionModel = null;
            for(int i=0 ;i<permissonType.length;i++ )
            {
                String userType = userTypeCombo.getSelectedItem().toString();
                userPermissionModel=new UserPermissionModel();
                userPermissionModel.setPermissionModel(permissionDAO.getPermissionWithPermissionType((String) permissonType[i]));
                userPermissionModel.setUserTypeModel(userTypeDAO.getUserTypeIdWithName(userType));
                userPermissionDAO.addUserPermission(userPermissionModel);
            }
            reloadBothAssignedAndUnassignedLists();
        }
    }//GEN-LAST:event_btnAssignParmissionActionPerformed

    private void btnUnassignPermissionActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnUnassignPermissionActionPerformed
        if(userTypeCombo.getSelectedIndex()>0) {
            Object[] o = listOfAssignedPermissions.getSelectedValues();
            if(o.length != -1) {
                for(Object oi : o) {
                String permissionType  = oi.toString();
                String userType = (String) userTypeCombo.getSelectedItem();
                    UserTypeDAO userTypeDAO = new UserTypeDAOImpl();
                    PermissionDAO permissionDAO = new PermissionDAOImpl();
                    PermissionModel permissionModel = permissionDAO.getPermissionWithPermissionType(permissionType);
                    //UserTypeModel userTypeModel = 
                
            }
            }
            
        }
    }//GEN-LAST:event_btnUnassignPermissionActionPerformed

    private void btnAssignAllPermissionsActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnAssignAllPermissionsActionPerformed
        if(listOfUnassignedPermissions.getSelectedValue()!=null) {
            Object[] permissonType = listOfUnassignedPermissions.getSelectedValues();    
            PermissionDAO permissionDAO = new PermissionDAOImpl();
            UserTypeDAO userTypeDAO = new UserTypeDAOImpl();
            UserPermissionDAO userPermissionDAO = new UserPermissionDAOImpl();
            UserPermissionModel userPermissionModel = null;
            for(int i=0 ;i<permissonType.length;i++ )
            {
                String userType = userTypeCombo.getSelectedItem().toString();
                userPermissionModel=new UserPermissionModel();
                userPermissionModel.setPermissionModel(permissionDAO.getPermissionWithPermissionType((String) permissonType[i]));
                userPermissionModel.setUserTypeModel(userTypeDAO.getUserTypeIdWithName(userType));
                userPermissionDAO.addUserPermission(userPermissionModel);
            }
            reloadBothAssignedAndUnassignedLists();
        }
    }//GEN-LAST:event_btnAssignAllPermissionsActionPerformed

    private void btnUnassignAllPermissionsActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnUnassignAllPermissionsActionPerformed
        if(listOfAssignedPermissions.getSelectedValue()!=null) {
            Object[] permissonType = listOfAssignedPermissions.getSelectedValues();    
            PermissionDAO permissionDAO = new PermissionDAOImpl();
            UserTypeDAO userTypeDAO = new UserTypeDAOImpl();
            UserPermissionDAO userPermissionDAO = new UserPermissionDAOImpl();
            UserPermissionModel userPermissionModel = null;
            for(int i=0 ; i<permissonType.length; i++ ) {
                String userType = userTypeCombo.getSelectedItem().toString();
                userPermissionModel = new UserPermissionModel();
                userPermissionModel.setPermissionModel(permissionDAO.getPermissionWithPermissionType((String) permissonType[i]));
                userPermissionModel.setUserTypeModel(userTypeDAO.getUserTypeIdWithName(userType));
                userPermissionDAO.deleteUserPermission(userPermissionModel);
            }
            reloadBothAssignedAndUnassignedLists();
        }
    }//GEN-LAST:event_btnUnassignAllPermissionsActionPerformed

    private void userTypeComboActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_userTypeComboActionPerformed
        if(userTypeCombo.getSelectedIndex()>0) {
            userType = userTypeCombo.getSelectedItem().toString();
            reloadBothAssignedAndUnassignedLists();
        }
    }//GEN-LAST:event_userTypeComboActionPerformed

    private void lbBackMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_lbBackMouseClicked
        new MainFrame().setVisible(true);
        this.dispose();
    }//GEN-LAST:event_lbBackMouseClicked

    private void lbBackMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_lbBackMouseEntered
        lbBack.setLocation(lbBack.getX()-1,lbBack.getY());
    }//GEN-LAST:event_lbBackMouseEntered

    private void lbBackMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_lbBackMouseExited
        lbBack.setLocation(lbBack.getX()+1,lbBack.getY());
    }//GEN-LAST:event_lbBackMouseExited

    private void lbLogoutMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_lbLogoutMouseClicked
        new LoginFrame().setVisible(true);
        this.dispose();
    }//GEN-LAST:event_lbLogoutMouseClicked

    private void lbLogoutMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_lbLogoutMouseEntered
        lbLogout.setLocation(lbLogout.getX()+1,lbLogout.getY());
    }//GEN-LAST:event_lbLogoutMouseEntered

    private void lbLogoutMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_lbLogoutMouseExited
        lbLogout.setLocation(lbLogout.getX()-1,lbLogout.getY());
    }//GEN-LAST:event_lbLogoutMouseExited

    /**
     * @param args the command line arguments
     */
//    public static void main(String args[]) {
//        /* Set the Nimbus look and feel */
//        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
//        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
//         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
//         */
//        try {
//            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
//                if ("Nimbus".equals(info.getName())) {
//                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
//                    break;
//                }
//            }
//        } catch (ClassNotFoundException ex) {
//            java.util.logging.Logger.getLogger(UserPermissionFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
//        } catch (InstantiationException ex) {
//            java.util.logging.Logger.getLogger(UserPermissionFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
//        } catch (IllegalAccessException ex) {
//            java.util.logging.Logger.getLogger(UserPermissionFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
//        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
//            java.util.logging.Logger.getLogger(UserPermissionFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
//        }
//        //</editor-fold>
//
//        /* Create and display the form */
//        java.awt.EventQueue.invokeLater(new Runnable() {
//            public void run() {
//                new UserPermissionFrame().setVisible(true);
//            }
//        });
//    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JPanel backgroundPanel;
    private javax.swing.JButton btnAssignAllPermissions;
    private javax.swing.JButton btnAssignParmission;
    private javax.swing.JButton btnUnassignAllPermissions;
    private javax.swing.JButton btnUnassignPermission;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JLabel lbBack;
    private javax.swing.JLabel lbLogout;
    private javax.swing.JLabel lbPatient;
    private javax.swing.JLabel lbPatient1;
    private javax.swing.JLabel lbPatient2;
    private javax.swing.JList<String> listOfAssignedPermissions;
    private javax.swing.JList<String> listOfUnassignedPermissions;
    private javax.swing.JComboBox<String> userTypeCombo;
    // End of variables declaration//GEN-END:variables
    
    private void populateUserTypeCombo() {
        UserTypeDAO userTypeDAO = new UserTypeDAOImpl();
        List<UserTypeModel> allUserTypes = userTypeDAO.getAllUserTypes();
        for (UserTypeModel allUserType : allUserTypes) {
            userTypeCombo.addItem(allUserType.getUserType());
        }
    }
    private void loadAssignedList() {
        assignedPermissions.clear();
        UserPermissionDAO userPermissionDAO = new UserPermissionDAOImpl();
        List<UserPermissionModel> userPermissionModels = userPermissionDAO.getAssignedPermissions(userType);
        for (UserPermissionModel userPermissionModel : userPermissionModels) {
            assignedPermissions.addElement(userPermissionModel.getPermissionModel().getName());
            listOfAssignedPermissions.setModel(assignedPermissions);
        }    
    }
    private void loadUnAssignedList() {
        unassignedPermissions.clear();
        UserPermissionDAO userPermissionDAO = new UserPermissionDAOImpl();
        List<UserPermissionModel> userPermissionModels = userPermissionDAO.getUnassignedPermissions(userType);
        for (UserPermissionModel userPermissionModel : userPermissionModels) {
            unassignedPermissions.addElement(userPermissionModel.getPermissionModel().getName());
            listOfUnassignedPermissions.setModel(unassignedPermissions);
        }
    }
    private void reloadBothAssignedAndUnassignedLists() {
        loadUnAssignedList();
        loadAssignedList();
    }
    private void setIcon() {
        setIconImage(Toolkit.getDefaultToolkit().getImage(getClass().getResource("frameIcon.png")));
    }

    private void checkPermissions() {
        UserPermissionDAO permissionDAO = new UserPermissionDAOImpl();
        List<UserPermissionModel> permissionModels = permissionDAO.getAssignedPermissions(LoginFrame.userType);
        for (UserPermissionModel permissionModel : permissionModels) {
            if(permissionModel.getPermissionModel().getName().equals("ADD_USER_PERMISSION")) {
                btnAssignParmission.setVisible(true);
                btnAssignAllPermissions.setVisible(true);
            }
            if(permissionModel.getPermissionModel().getName().equals("DELETE_USER_PERMISSION")) {
                btnUnassignPermission.setVisible(true);
                btnUnassignAllPermissions.setVisible(true);
            }
        }
    }
}